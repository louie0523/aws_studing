<과제 2 진짜 풀이를 찾은 당신에게 축하를 전합니다 ! >


< 여기서 부턴 진짜 과제 2 풀이입니다. >

추신 - 정확하진 않지만 앵간하면 맞음



서버 연결후 폴더 열기로 파일을 볼 수 있음.




sudo yum install git -y

code commit

리포지토리 생성

HTTPS 링크 복사

git clone <복사한 링크>

그후 자격증명 후

cd <생성한 리포지토리 폴더 이름>/

vi index.html

<!DOCTYPE html>
<html>
<head>
    <title>Color Selector</title>
</head>
<body>
    <h1>Choose a Color</h1>
    <form action="/showColor" method="get">
        <label for="color">Enter Color (hex code):</label>
        <input type="text" id="color" name="color">
        <input type="submit" value="Submit">
    </form>
</body>
</html>

git add .

git commit -m "te"

git branch -M front

git push origin front

다시 자격증명

 * [new branch]      front -> front

 라고 떠야함.

 codemmit 파이프라인

 파이프라인 생성! [ 뒤로 넘어가라 이거 잘못됨 ㅈㅂ]

 암것도 건들지말고 다음

 소스 - CodeCommit

 리포지토리 및 브랜치 선택( 각각 skills-code / front 일것이다. )

 다음

 빌드 스테이지 건너뛰기

/////////// [ 버킷 생성하러가 ]
 
 버킷 생성( 이름 잘정해라 )

 바로 다음

 다시 버킷 -> 속성 -> 정적 웹 호스팅 어쩌구 저쩌구~

활성화 후

인덱스 문서 [ index.html ]로 하기

그후 권한 -> 퍼플릭 엑세스 차단 -> 모두 풀어버리기 

바로밑 버킷 정책  

버킷 ARN 복사 후 

버킷 생성기 간 다음 맨위 타입 셀렉트 -> S3으로 변경

PriciPal : *
All Action 체크!
아마존 리소스 네임에 버킷 ARN/*
///////////////////////[ 정책 예제 ]
{
    "Version": "2012-10-17",
    "Id": "Policy1712084474382",
    "Statement": [
        {
            "Sid": "Stmt1712084473333",
            "Effect": "Allow",
            "Principal": "*",
            "Action": "s3:*",
            "Resource": "arn:aws:s3:::s3-louie0523/*"
        }
    ]
}
//////////////////////////////
ADD STATMENT

밑에창으로 넘어가면 

제네럴 폴리시 -> 나온거 전부 버킷 정책에 복붙!

변경사항 저장!
/////////////////////////
다시 파이프라인

소스 - s3
////////////////////////////
[ 취소 ]

배포 : s3

알맞는거 채크하고

배포하기 전에 파일 압축 풀기

배포 경로 하지마셈. 

생성했으면 살짝 숨쉬고 물마시기!

그리고 보안그룹 -> cluster-sg (보안그룹) 생성

인바운드 : 모든트래픽 any4
아웃바운드 : 모든트래픽 any4(안건들면됨)

다음은 로드밸런스 보안그룹 -> alb-sg (보안그룹) 생성

인바운드 : 사용자 어쩌구 / any4
아웃바운드 : 모든 트래픽 any4( 안건듬 )

그다음 대상그룹 

타입 : 인스턴스 ->ip주소
skills-tg-1
Port : 8080

이름만 바꾸고 한번더 2까지 생성
skills-tg-2
Port : 8080

로드밸런서 생성///////////////////////

체계 : 인터넷 경계 -> 내부

vpc 선택후 가용 영역은 pri로 

보안그룹 설정

아까 만든 대상그룹 1 선택하고 바로 생성

s3 버킷 -> 속성 -> 이제 정적 웹 호스팅 어쩌구에 링크 뜰텐데 들어가기

Choose color가 떠야함

잘됬으면 ECS로 ㄱㄱ 

클러스터 생성( 이름만 적고 바로 생성 )

새 태스크 정의 생성 

이름 정하기

잠시 iam 으로 이동

역할 생성

ECS 

ECS TASK 생성

테스크 역할 : 방금 생성한 iam 역할

테스크 실행 역할 : 방금 생성한 iam 역할

컨테이너 - 1

이름 : 정하기
이밎 URI : 사용자명/spring:1

상태 확인 > 
맨 윗칸

CMD-SHELL, curl --fail http://localhost:8080/health || exit 1

복붙

이제 생성 후 아까 생성한 클러스터로 들어가서

서비스 생성 > 패밀리 -> 뜨는거 선택

서비스 이름 : skills-svc

원하는 태스크 : 2로 지정

배포 옵션 : 블루/그린 배포

다시 iam으로 뛰가기

역할 -> CodeDeploy - ECS 선택

다시 돌아와서 배포구성 밑의 서비스 역할 -> 방금 생성한 역할로 변경

네트워킹 : 프라이빗만( 3개 )

보안 그룹 : svc 선택

로드 밸런싱 : ALB

새 로드 밸런서 생성 -> 기존 로드 밸런서 사용

로드 밸런서 : 아까 생성한 ALB

새 리스너 : 기존 리스너 사용으로 변경 후 아까 만든거 80 체크

테스트 리스너 추가

대상 그룹 1 : 기존 대상 그룹 사용

대상 그룹 2 : 마찬가지, 기존 대상 그룹 사용

다시 비주얼 코드

appspec.yml 생성
//////////////////////////////
version: 0.0

Resources:
  - TargetService:
      Type: AWS::ECS::Service
      Properties:
        TaskDefinition: "<TASK_DEFINITION>" # 수정 안하는거
        LoadBalancerInfo:
          ContainerName: "skills-ctn"
          ContainerPort: 8080
//////////////////////////////////////

buildspec.yml 생성

///////////////////////////////
version: 0.2
phases:
  pre_build:
    commands:
      - DOCKER_IMAGE=louie0523/spring:2
  build:
    commands:
      # Docker Build & Push
  post_build:
    commands:
      - sed -i "s#<WNGNL_IMAGE>#$DOCKER_IMAGE#g" taskdef.json


artifacts:
  files:
    - 'appspec.yml'
    - 'taskdef.json'
///////////////////////////////////////////////

taskdef.json 생성

//////////////////////////////////////////

////////////////////////////////////////////


테스트 정의 -> 생성한 테스트 -> 개정1개 -> 컨테이너

JSON으로 변경후 클립보드로 복사, taskdef.json 에 복붙 <97line : Tag 어쩌구 지우면됨><96 : , 지워야함 >

git add .
git commit -m "tse"

출력 : 
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 4 files changed, 124 insertions(+), 14 deletions(-)
 create mode 100644 appspec.yml
 create mode 100644 buildspec.yml
 delete mode 100644 index.html
 create mode 100644 taskdef.json
///////////////////////////////////////////////////
git branch -M back

git push origin back

이 명령어 치면 아마 이름 / 비번 입력하는거 나올 수 있음.

 * [new branch]      back -> back

위 처럼 출력 !

curl <로브밸런서DNS>/health

< TAG : MATCH > 어쩌구 뜨면 성공

CODEPIPLINE 들어가기

빌드 프로젝트 생성

<이름설정>

소스

AWS CodeCommit

리포지토리 : skills-code

브랜치 : back으로 선택( 두번째로 생성한거 )

환경 

새 서비스 역할 -> 기존 서비스 역할

역할 ARN : skills-codebuild-role

위에꺼는 iam 가서 codebuild 관련 정책 5개 추가했음. + admin

Buidspec 에서 빌드 명령 삽입 -> buidspec 파일 사용

codedeploy -> 애플레케이션

이름 : skills-app 만 정하고 생성

배포 그룹 생성

이름 skills-dg

쭉쭉 선택하다 로드밸런서쪽

프로덕션 리스너 포트 : 80
테스트 리스너 포트 : 8080

배포 설정 

1 시간 -> 0시간으로 변경

밑의 롤백 비활성화, 대신 다시 위의 두개 모두다 체크

배포 그룹 생성

다시 파이프라인

파이프라인 생성

이름 : skills-ecs-pipeline

역할 ARN 이름과 똑같이 적고

역할 ARN : skills-ecs-pipeline

소스 공급자 Ccmit

브랜치 : back

빌드 공급자

공급자 : codebuild

밑에 딱 뜨는거 하나 하고 다음

배포

아마존 ECS (블루/그린)

ECS 작업 정의

입력 아티팩트 : BuildAtrifact : task 어쩌구
입력 아티팩트 : BuildAtrifact : appsepc 어쩌구

다음으로 생성

CloudFront 이동

아까 생성한 버킷으로 이동

엔드포인트 경고 어쩌구 클릭

HTTPS만 해당

밑으로 쭈욱 ~

뷰어 

뷰어 프로토콜 정책

Redirect HTTPs 어쩌구로 선택

허용된 HTTPS 방법

GET, HEAD, OPTIONS, PUt 암튼 졸라 많은거 선택

웹 애플리케이션 방화벽

보안 보호 비활성화

IPv6 끄기

배포 생성

원본으로 이동 -> 원본 생성

도메인은 alb

HTTP만 해당

원본생성

이제 동작 -> 동작 생성 

경로 패턴 /health

원본 및 원본 그룹 : alb

뷰어

뷰어 프로토콜 정책 아까랑 마찬가지( 2번째 )

허용된 HTTP 방법 도 마찬가지 3번쨰

/showColor

캐시 정책 : cachingDisable ( 2번째꺼) 

원본 요청 정책 : ALLViewer ( 2번째꺼 )

동작 생성 (+)

다시 또 동작 생성


경로 패턴 /showColor

그외 아까와 똑같이 다 설정해주고

생성

무효화 -> 무효화 생성

객체 경로 

/*

다시 일반 ->
배포 도메인 이름 복사

웹사이트창에 접속되는지 확인

!! 주의사항! codepipeline이 모두 잘 생성됬는지 확인한다!!!!!!!!!!!!!

참고로 cloud front에 배포 두개ㅐ있어여하ㅣㅁ.

eks 클러스터 -> 서비스에도 테스크 2개여야하고

베이션에서 crul <로드밸런스DNS>/health를 했을때 Stress 어쩌구라 떠야함.

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

일단 이래도 오류가 났으면 동작 두개 다지우고 원본중 ALB 지우면됨.

원본 다시 만들고 ALB, https ( 포트 80 나오게 )

다시 동작가서

/health

alb

2

3

2

2

뷰여 액세스 제한은 NO

쌤도 여긴 모른다 하셨다. 난 할만큼 한거야!
